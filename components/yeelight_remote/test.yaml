esphome:
  name: test

esp8266:
  board: esp_wroom_02
  framework:
    version: 2.7.4
  restore_from_flash: true

preferences:
  flash_write_interval: 1min

external_components:
  - source:
      type: git
      url: https://github.com/thedsv/yeelight_remote
    components: [ yeelight_remote ]

wifi:
  ssid: !secret ssid
  password: !secret wpa2
  fast_connect: true

  ap:
    ssid: "yeelight_esphome"
    password: !secret ap_password

captive_portal:

# Enable logging
logger:
  # For logging via serial/usb
  # baud_rate: 115200
  baud_rate: 0

  # logs level for serial/wifi both (lower == faster device working)
  # level: VERY_VERBOSE
  # level: DEBUG
  level: INFO

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  password: !secret ota_password

i2c:
  sda: GPIO2
  scl: GPIO14
  scan: false

# Example configuration entry
wled:

# Specify the two pins of the h-bridge as PWM pins
output:
  - platform: esp8266_pwm
    pin: GPIO12
    id: output_cw
    power_supply: power
    # min_power: 0.05
  - platform: esp8266_pwm
    pin: GPIO5
    id: output_ww
    power_supply: power
    # min_power: 0.05

power_supply:
  - id: power
    pin: GPIO4
    enable_time: 0s
    keep_on_time: 0s
    # enable_time: 40ms
    # keep_on_time: 20ms

light:
  - platform: cwww
    id: light1
    default_transition_length: 1s
    restore_mode: RESTORE_AND_OFF
    # restore_mode: RESTORE_DEFAULT_OFF
    # restore_mode: ALWAYS_OFF
    constant_brightness: true
    gamma_correct: 0
    name: "Yeelight Screenbar front light"
    cold_white: output_cw
    warm_white: output_ww
    cold_white_color_temperature: 6500 K
    warm_white_color_temperature: 2700 K

  - platform: neopixelbus
    type: GRB
    variant: WS2811
    pin: GPIO13
    method:
      type: bit_bang
    num_leds: 40
    name: "Yeelight Screenbar back light"
    id: LED_ring
    # gamma_correct: 1
    default_transition_length: 0s
    restore_mode: RESTORE_AND_ON
    power_supply: power

uart:
  - id: remote_bus
    baud_rate: 4800
    rx_pin: GPIO2

yeelight_remote:
  on_press:
    - light.toggle: light1
    - delay: 0.5s
  on_left:
    then:
      - if:
          condition:
            # stop if brightness < 6% (5% is off)
            lambda: 'return id(light1).current_values.get_brightness() > 0.07;'
          then:
            - light.dim_relative:
                id: light1
                relative_brightness: -3%
                transition_length: 0.2s
      - delay: 0.2s
  on_right:
    then:
      - light.dim_relative:
          id: light1
          relative_brightness: 3%
          transition_length: 0.2s
      - delay: 0.2s
  on_long_press:
    - light.toggle: LED_ring
    - delay: 1s
